package com.heqin.javabase.generictypes.principle.nodeeample;

/**
 * @Author heqin
 * @Date 2021/10/19 7:15
 */
public class MyNode extends Node<Integer> {

    public MyNode(Integer data) {
        super(data);
    }

    public void setData(Integer data) {
        System.out.println("MyNode.setData");
        super.setData(data);
    }
}

//After type erasure, the MyNode classes become:
//类型擦除后，MyNode 类变为：
/*
public class MyNode extends Node {//type erasure

    public MyNode(Integer data) {
        super(data);
    }

    public void setData(Integer data) {
        System.out.println("MyNode.setData");
        super.setData(data);
    }
}
*/

//So to preserve the polymorphism, a bridge method is entered in Class MyNode
//所以为了保持多态性，在 Class MyNode 中输入了一个桥接方法
/*
public class MyNode extends Node {

    public MyNode(Integer data) {
        super(data);
    }

    // Bridge method generated by the compiler
    public void setData(Object data) {
        setData((Integer) data);
    }

    public void setData(Integer data) {
        System.out.println("MyNode.setData");
        super.setData(data);
    }
}
 */